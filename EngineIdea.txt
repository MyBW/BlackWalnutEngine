#在unreal中 上层的RenderTarge并不是一个包含GPU资源的一个类别（也就是说并不是使用glGenFrameBuffer产生的）更多是一个概念上的东西。
这样的好处是可以分配很多的RenderTarger  当要使用它们的时候可以将该RenderTarget“绑定”到真正的RenderTarget上

#Static State 这个技巧非常强大 首先将状态分组 通过使用模板来将这些状态组缓存起来 然后每次切换状态的之前进行判定 减少了生成状态以及切换状态的开销 是一种以时间换空间的策略

#一直在纠结这个TextureUnite类和Texture类只见的关系是什么  因为存放的数据成员都一样 所以总觉得两个其实是一样的  但是如果我们将RenderSystem看成是对底层渲染API的抽象 那么底层
在使用Texture的时候并不关心一些逻辑信息  其实TextureUnit就是用来保存这些逻辑信息的 比如PassParent等等 这样在实现对底层API封装的时候 就可以不用关心逻辑信息 这样的拆分更合理
一些


